#!/bin/bash
# Parameters
user="ohadoz"
baseDirectory="/home/$user/Desktop/RansomwareDetection"
testTar="$baseDirectory/TestData/tar/TestData.tar.gz"
testOutput="$baseDirectory/TestData/output/"
testOutputDirectory="$baseDirectory/TestData/output"
buildOutput="$baseDirectory/src"
sandBox="/tmp/sandbox"
testSummaryRootDirectory="$baseDirectory/TestResults"
now="$(date +'%d-%m-%Y_%H-%M-%S')"
currentDate="Run_$now"
testSummaryFolder="$testSummaryRootDirectory/$currentDate"
ransomwaresOriginPath="/home/$user/Desktop/RealRansomwares"
falseRansomwaresOriginPath="/home/$user/Desktop/FalseRansomwares"
ransomwaresListFile="$baseDirectory/ransomwares"
falseRansomwaresListFile="$baseDirectory/falseRansomwares"
singleSummaryFile="run_summary"
configPath="$baseDirectory/src/parameters.config"
# Endparameters

function cleanup
{
    printf "\033[1;34mTest data cleanup\033[0m\n"
    sudo rm -rf $testOutputDirectory
    runOutput="$baseDirectory/src/Run/*"
    runOutput=${runOutput// /\\ }
    eval rm -f ${runOutput}
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function deploy
{
    printf "\033[1;34mCreate test data\033[0m\n"
    mkdir $testOutputDirectory
    testFilesDir="$testOutputDirectory/TestFiles"
    mkdir $testFilesDir
    tar -C $testFilesDir -zxf $testTar

    # printf "Copying lib\n"
    libPath="$testOutputDirectory/lib/"
    mkdir $libPath
    sudo cp -r /lib/* $libPath

    # printf "Copying lib64\n"
    lib64Path="$testOutputDirectory/lib64/"
    mkdir $lib64Path
    sudo cp -r /lib64/* $lib64Path

    # printf "copying bin\n"
    binPath="$testOutputDirectory/bin/"
    mkdir $binPath
    sudo cp -r /bin/* $binPath

    # printf "copying usr/lib/python2.7\n"
    usrPath="$testOutputDirectory/usr/"
    mkdir $usrPath
    usrLibPath="$testOutputDirectory/usr/lib/"
    mkdir $usrLibPath
    usrLibPythonPath="$testOutputDirectory/usr/lib/python2.7/"
    mkdir $usrLibPythonPath
    sudo cp -r /usr/lib/python2.7/* $usrLibPythonPath

    # printf "copying usr/lib/python3\n"
    usrLibPython3Path="$testOutputDirectory/usr/lib/python3/"
    mkdir $usrLibPython3Path
    sudo cp -r /usr/lib/python3/* $usrLibPython3Path

    # printf "copying usr/lib/python3.6\n"
    usrLibPython36Path="$testOutputDirectory/usr/lib/python3.6/"
    mkdir $usrLibPython36Path
    sudo cp -r /usr/lib/python3.6/* $usrLibPython36Path

    # printf "copying usr/lib/python3.7\n"
    usrLibPython37Path="$testOutputDirectory/usr/lib/python3.7/"
    mkdir $usrLibPython37Path
    sudo cp -r /usr/lib/python3.7/* $usrLibPython37Path

    # printf "copying usr/lib/python3.8\n"
    usrLibPython38Path="$testOutputDirectory/usr/lib/python3.8/"
    mkdir $usrLibPython38Path
    sudo cp -r /usr/lib/python3.8/* $usrLibPython38Path

    # printf "copying usr/lib/python3.8\n"
    usrLibX84Python38Path="$testOutputDirectory/usr/lib/x86_64-linux-gnu/"
    mkdir $usrLibX84Python38Path
    sudo cp -r /usr/lib/x86_64-linux-gnu/* $usrLibX84Python38Path

    # printf "copying bash\n"
    bashPath="$testOutputDirectory/bash"
    sudo cp -r /bin/bash $bashPath

    # printf "copying usr/share/pyshared\n"
    usrSharedPath="$testOutputDirectory/usr/share/"
    mkdir $usrSharedPath
    sudo cp -r /usr/share/* $usrSharedPath

    # printf "copying usr/share/pyshared\n"
    etcPath="$testOutputDirectory/etc/"
    mkdir $etcPath
    sudo cp -r /etc/* $etcPath

    # printf "copying usr/bin/python2.7\n"
    pythonPath="$testOutputDirectory/python"
    sudo cp -r /usr/bin/python2.7 $pythonPath

    # printf "copying usr/bin/python3.6\n"
    python36Path="$testOutputDirectory/python3"
    sudo cp -r /usr/bin/python3.6 $python36Path

    # printf "copying false ransomwares\n"
    falseRansomwaresPath="$testOutputDirectory/FalseRansomwares/"
    mkdir $falseRansomwaresPath
    sudo cp -r /home/$user/Desktop/FalseRansomwares/* $falseRansomwaresPath

    # printf "copying ransomwares\n"
    ransomwaresPath="$testOutputDirectory/RealRansomwares/"
    mkdir $ransomwaresPath
    sudo cp -r /home/$user/Desktop/RealRansomwares/* $ransomwaresPath
    
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function stop
{
    printf "\033[1;34mStop previous run\033[0m\n"
    sudo umount $sandBox
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function start 
{
    printf "\033[1;34mStart Ransomware Detection\033[0m\n"
    mkdir -p $sandBox
    ./RansomwareDetection --single $testOutput $sandBox &
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function stop
{
    printf "\033[1;34mStopping Ransomware Detection\033[0m\n"
    sudo umount $sandBox
    printf "\033[1;32mOk\033[0m\n"
}

function runFalseRansomware
{
    programCommand=$1
    cmd="sudo chroot $sandBox $programCommand"
    eval $cmd
}

function runRansomware
{
    programCommand=$1
    cmd="sudo chroot $sandBox $programCommand"
    eval $cmd
}

function run
{
    realRansomware=$1
    ransomwaresFile=$falseRansomwaresListFile
    if [ $realRansomware -eq 1 ] 
    then 
        printf "\033[1;34mRunning ransomwares\033[0m\n"
        ransomwaresFile=$ransomwaresListFile
    else
        printf "\033[1;34mRunning false ransomwares\033[0m\n"
    fi

    while IFS= read -r ransomwarePath
    do
        ransomwareName=`echo $ransomwarePath | cut -d' ' -f1`
        ransomwareCmd=`echo $ransomwarePath | cut -d' ' -f2-`

        if [ $realRansomware -eq 1 ] 
        then 
            printf "\033[1;31mRunning ransomware: %s\033[0m\n" $ransomwareName
        else
            printf "\033[1;31mRunning false ransomware: %s\033[0m\n" $ransomwareName
        fi

        cleanup
        deploy
        stop
        cd $buildOutput
        start

        if [ $realRansomware -eq 1 ] 
        then 
            runRansomware "$ransomwareCmd"
        else
            runFalseRansomware "$ransomwareCmd"
        fi

        printf "\033[1;34mChecking results\033[0m\n"    
        runSummaryPath="$testSummaryFolder/$ransomwareName"
        mkdir -p $runSummaryPath

        logOutput="$baseDirectory/src/Run/Log*"
        logOutput=${logOutput// /\\ }
        eval cp $logOutput "$runSummaryPath/log.txt"
        cd ..
        ./statsSingleRun $ransomwareName "$runSummaryPath/log.txt" "$runSummaryPath/$singleSummaryFile"

        printf "\033[1;33mDone.\033[0m\n"
    done < "$ransomwaresFile"
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function showConfig
{
    # Print config
    printf "\033[1;34mConfigurations\033[0m\n"
    echo "Build output: $buildOutput"
    echo "Test tar: $testTar"
    echo "Test output: $testOutput"
    echo "Sandbox: $sandBox"
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function build
{
    # Build
    printf "\033[1;34mBuilding project\033[0m\n"
    make
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

showConfig
cd src
build
run 0
sleep 1
# run 1

# Get final statistics
printf "\033[1;34mChecking overall results\033[0m\n"
summaryFileName="summary"
./statsFinal $testSummaryFolder $summaryFileName $singleSummaryFile $configPath
sleep .5
printf "\033[1;32mOk\033[0m\n"

# Finish
printf "\033[1;34mDemo summary: (detailed summaries at: $testSummaryFolder\033[0m\n"
summaryFilePath="$testSummaryFolder/$summaryFileName"
cat $summaryFilePath