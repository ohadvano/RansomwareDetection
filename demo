#!/usr/bin/env bash
# Parameters
testTar="/home/ohadoz/Desktop/RansomwareDetection/TestData/tar/TestData.tar.gz"
testOutput="/home/ohadoz/Desktop/RansomwareDetection/TestData/output/"
testOutputDirectory="/home/ohadoz/Desktop/RansomwareDetection/TestData/output"
buildOutput="/home/ohadoz/Desktop/RansomwareDetection/src"
sandBox="/tmp/sandbox"
testSummaryRootDirectory="/home/ohadoz/Desktop/RansomwareDetection/TestResults"
now="$(date +'%d-%m-%Y_%H-%M-%S')"
currentDate="Run_$now"
testSummaryFolder="$testSummaryRootDirectory/$currentDate"
ransomwaresListFile="/home/ohadoz/Desktop/RansomwareDetection/ransomwares"
falseRansomwaresListFile="/home/ohadoz/Desktop/RansomwareDetection/falseRansomwares"
singleSummaryFile="run_summary"
# Endparameters

function cleanup
{
    printf "\033[1;34mTest data cleanup\033[0m\n"
    rm -rf $testOutputDirectory
    runOutput='/home/ohadoz/Desktop/RansomwareDetection/src/Run/*'
    runOutput=${runOutput// /\\ }
    eval rm -f ${runOutput}
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function deploy
{
    printf "\033[1;34mCreate test data\033[0m\n"
    mkdir $testOutput
    tar -C $testOutput -zxf $testTar
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function stop
{
    printf "\033[1;34mStop previous run\033[0m\n"
    sudo umount $sandBox
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function start 
{
    printf "\033[1;34mStart Ransomware Detection\033[0m\n"
    mkdir -p $sandBox
    ./RansomwareDetection $testOutput $sandBox &
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function stop
{
    printf "\033[1;34mStopping Ransomware Detection\033[0m\n"
    sudo umount $sandBox
    printf "\033[1;32mOk\033[0m\n"
}

function runFalseRansomware
{
    echo "1"
    filePath=$1
    # chroot $sandBox $filePath
}

function runRansomware
{
    echo "2"
    filePath=$1
    wineCommand="wine $filePath"
    # chroot $sandBox $wineCommand
}

function run
{
    realRansomware=$1
    ransomwaresFile=$falseRansomwaresListFile
    if [ $realRansomware -eq 1 ] 
    then 
        printf "\033[1;34mRunning ransomwares\033[0m\n"
        ransomwaresFile=$ransomwaresListFile
    else
        printf "\033[1;34mRunning false ransomwares\033[0m\n"
    fi

    while IFS= read -r ransomwarePath
    do
        ransomwareName=${ransomwarePath##*/}
        if [ $realRansomware -eq 1 ] 
        then 
            printf "\033[1;31mRunning ransomware: %s\033[0m\n" $ransomwareName
        else
            printf "\033[1;31mRunning false ransomware: %s\033[0m\n" $ransomwareName
        fi

        cleanup
        deploy
        stop
        cd $buildOutput
        start

        if [ $realRansomware -eq 1 ] 
        then 
            runRansomware $ransomwarePath
        else
            runFalseRansomware $ransomwarePath
        fi

        printf "\033[1;34mChecking results\033[0m\n"    
        runSummaryPath="$testSummaryFolder/$ransomwareName"
        mkdir -p $runSummaryPath

        logOutput='/home/ohadoz/Desktop/RansomwareDetection/src/Run/Log*'
        logOutput=${logOutput// /\\ }
        eval cp $logOutput "$runSummaryPath/log.txt"
        cd ..
        ./statsSingleRun "$statsFilePath/$singleSummaryFile" "$runSummaryPath/log.txt" 

        printf "\033[1;33mDone.\033[0m\n"
    done < "$ransomwaresFile"
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function showConfig
{
    # Print config
    printf "\033[1;34mConfigurations\033[0m\n"
    echo "Build output: $buildOutput"
    echo "Test tar: $testTar"
    echo "Test output: $testOutput"
    echo "Sandbox: $sandBox"
    sleep .5
    printf "\033[1;32mOk\033[0m\n"
}

function build
{
    # Build
    printf "\033[1;34mBuilding project\033[0m\n"
    make
    sleep 1
    printf "\033[1;32mOk\033[0m\n"
}

showConfig
cd src
build
run 0
run 1

# Get final statistics
printf "\033[1;34mChecking overall results\033[0m\n"
summaryFileName="summary"
./statsFinal $testSummaryFolder $summaryFileName $singleSummaryFile
sleep .5
printf "\033[1;32mOk\033[0m\n"

# Finish
printf "\033[1;34mDemo summary: (detailed summaries at: $testSummaryFolder\033[0m\n"
summaryFilePath="$testSummaryFolder/$summaryFileName"
cat $summaryFilePath