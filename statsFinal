#!/usr/bin/env bash

statsDirectory=$1
summaryName=$2
singleSummaryName=$3
singleSummaryName_f=$4
configFile=$5

summaryFile="$statsDirectory/$summaryName"

totalWrite=0
totalRmdir=0
totalForget=0
totalActions=0
maxFTCthreshold=0
maxSMthreshold=0
maxSEthreshold=0
maxFDthreshold=0
maxSKthreshold=0
totalWriteRisk=0
totalRmdirRisk=0
totalForgetRisk=0
totalRisk=0
totalWrite_f=0
totalRmdir_f=0
totalForget_f=0
totalActions_f=0
maxFTCthreshold_f=0
maxSMthreshold_f=0
maxSEthreshold_f=0
maxFDthreshold_f=0
maxSKthreshold_f=0
totalWriteRisk_f=0
totalRmdirRisk_f=0
totalForgetRisk_f=0
totalRisk_f=0
{ IFS= read -rd '' config <$configFile;} 2>/dev/null
config=`echo "$config" | sed -e 's/^/| /'`
config=`echo "${config//;}"`
config=`echo "$config" | tr "," " \| "`

writeRegex="\| Write                  \| ([0-9^]+)"
rmdirRegex="\| Rmdir                  \| ([0-9^]+)"
forgetRegex="\| Forget                 \| ([0-9^]+)"
resWriteRegex="\| Resolutions - Write"
resRmdirRegex="\| Resolutions - Rmdir"
resForgetRegex="\| Resolutions - Forget"
ftcRegex="\| File type changes      \| ([0-9^]+)"
smeRegex="\| Similarity Measurement \| ([0-9^]+)"
sheRegex="\| Shannon Enthropy       \| ([0-9^]+)"
fidRegex="\| Files Deletion         \| ([0-9^]+)"
sukRegex="\| Suspicious Keywords    \| ([0-9^]+)"
totalRegex="\| Total                  \| ([0-9^]+)"

function Promote_totalActions
{
    num=$1
    totalActions=$((totalActions+num))
}

function Promote_totalWrite
{
    num=$1
    totalWrite=$((totalWrite+num))
    Promote_totalActions $num
}

function Promote_totalRmdir
{
    num=$1
    totalRmdir=$((totalRmdir+num))
    Promote_totalActions $num
}

function Promote_totalForget
{
    num=$1
    totalForget=$((totalForget+num))
    Promote_totalActions $num
}

function Promote_totalRisk
{
    num=$1
    totalRisk=$((totalRisk+num))
}

function Promote_totalWriteRisk
{
    num=$1
    totalWriteRisk=$((totalWriteRisk+num))
    Promote_totalRisk $num
}

function Promote_totalForgetRisk
{
    num=$1
    totalForgetRisk=$((totalForgetRisk+num))
    Promote_totalRisk $num
}

function Promote_totalRmdirRisk
{
    num=$1
    totalRmdirRisk=$((totalRmdirRisk+num))
    Promote_totalRisk $num
}

function SetIfGreater_maxFTCthreshold
{
    newVal=$1
    if [ "$newVal" -gt "$maxFTCthreshold" ]; then
        maxFTCthreshold=$newVal
    fi
}

function SetIfGreater_maxSMthreshold
{
    newVal=$1
    if [ "$newVal" -gt "$maxSMthreshold" ]; then
        maxSMthreshold=$newVal
    fi
}

function SetIfGreater_maxSEthreshold
{
    newVal=$1
    if [ "$newVal" -gt "$maxSEthreshold" ]; then
        maxSEthreshold=$newVal
    fi
}

function SetIfGreater_maxFDthreshold
{
    newVal=$1
    if [ "$newVal" -gt "$maxFDthreshold" ]; then
        maxFDthreshold=$newVal
    fi
}

function SetIfGreater_maxSKthreshold
{
    newVal=$1
    if [ "$newVal" -gt "$maxSKthreshold" ]; then
        maxSKthreshold=$newVal
    fi
}

function Promote_totalActions_f
{
    num=$1
    totalActions_f=$((totalActions_f+num))
}

function Promote_totalWrite_f
{
    num=$1
    totalWrite_f=$((totalWrite_f+num))
    Promote_totalActions_f $num
}

function Promote_totalRmdir_f
{
    num=$1
    totalRmdir_f=$((totalRmdir_f+num))
    Promote_totalActions_f $num
}

function Promote_totalForget_f
{
    num=$1
    totalForget_f=$((totalForget_f+num))
    Promote_totalActions_f $num
}

function Promote_totalRisk_f
{
    num=$1
    totalRisk_f=$((totalRisk_f+num))
}

function Promote_totalWriteRisk_f
{
    num=$1
    totalWriteRisk_f=$((totalWriteRisk_f+num))
    Promote_totalRisk_f $num
}

function Promote_totalForgetRisk_f
{
    num=$1
    totalForgetRisk_f=$((totalForgetRisk_f+num))
    Promote_totalRisk_f $num
}

function Promote_totalRmdirRisk_f
{
    num=$1
    totalRmdirRisk_f=$((totalRmdirRisk_f+num))
    Promote_totalRisk_f $num
}

function SetIfGreater_maxFTCthreshold_f
{
    newVal=$1
    if [ "$newVal" -gt "$maxFTCthreshold_f" ]; then
        maxFTCthreshold_f=$newVal
    fi
}

function SetIfGreater_maxSMthreshold_f
{
    newVal=$1
    if [ "$newVal" -gt "$maxSMthreshold_f" ]; then
        maxSMthreshold_f=$newVal
    fi
}

function SetIfGreater_maxSEthreshold_f
{
    newVal=$1
    if [ "$newVal" -gt "$maxSEthreshold_f" ]; then
        maxSEthreshold_f=$newVal
    fi
}

function SetIfGreater_maxFDthreshold_f
{
    newVal=$1
    if [ "$newVal" -gt "$maxFDthreshold_f" ]; then
        maxFDthreshold_f=$newVal
    fi
}

function SetIfGreater_maxSKthreshold_f
{
    newVal=$1
    if [ "$newVal" -gt "$maxSKthreshold_f" ]; then
        maxSKthreshold_f=$newVal
    fi
}

# 0 = not set | 1 = WRITE | 2 = FORGET | 3 = RMDIR
context=0

for runResultsFile in `find $statsDirectory -name $singleSummaryName`
do
    while IFS= read -r summaryLine
    do
        if [[ $summaryLine =~ $writeRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalWrite $number

        elif [[ $summaryLine =~ $rmdirRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalRmdir $number

        elif [[ $summaryLine =~ $forgetRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalForget $number

        elif [[ $summaryLine =~ $resWriteRegex ]]; then
            context=1

        elif [[ $summaryLine =~ $resRmdirRegex ]]; then
            context=3

        elif [[ $summaryLine =~ $resForgetRegex ]]; then
            context=2

        elif [[ $summaryLine =~ $ftcRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxFTCthreshold $number

        elif [[ $summaryLine =~ $smeRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSMthreshold $number

        elif [[ $summaryLine =~ $sheRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSEthreshold $number

        elif [[ $summaryLine =~ $fidRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxFDthreshold $number

        elif [[ $summaryLine =~ $sukRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSKthreshold $number

        elif [[ $summaryLine =~ $totalRegex ]]; then
            number=${BASH_REMATCH[1]}
            if [ "$context" = "1" ]; then
                Promote_totalWriteRisk $number
            elif [ "$context" = "2" ]; then
                Promote_totalForgetRisk $number
            elif [ "$context" = "3" ]; then
                Promote_totalRmdirRisk $number
            fi

        fi
    done < "$runResultsFile"
done

for runResultsFile in `find $statsDirectory -name $singleSummaryName_f`
do
    while IFS= read -r summaryLine
    do
        if [[ $summaryLine =~ $writeRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalWrite_f $number

        elif [[ $summaryLine =~ $rmdirRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalRmdir_f $number

        elif [[ $summaryLine =~ $forgetRegex ]]; then
            number=${BASH_REMATCH[1]}
            Promote_totalForget_f $number

        elif [[ $summaryLine =~ $resWriteRegex ]]; then
            context=1

        elif [[ $summaryLine =~ $resRmdirRegex ]]; then
            context=3

        elif [[ $summaryLine =~ $resForgetRegex ]]; then
            context=2

        elif [[ $summaryLine =~ $ftcRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxFTCthreshold_f $number

        elif [[ $summaryLine =~ $smeRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSMthreshold_f $number

        elif [[ $summaryLine =~ $sheRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSEthreshold_f $number

        elif [[ $summaryLine =~ $fidRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxFDthreshold_f $number

        elif [[ $summaryLine =~ $sukRegex ]]; then
            number=${BASH_REMATCH[1]}
            SetIfGreater_maxSKthreshold_f $number

        elif [[ $summaryLine =~ $totalRegex ]]; then
            number=${BASH_REMATCH[1]}
            if [ "$context" = "1" ]; then
                Promote_totalWriteRisk_f $number
            elif [ "$context" = "2" ]; then
                Promote_totalForgetRisk_f $number
            elif [ "$context" = "3" ]; then
                Promote_totalRmdirRisk_f $number
            fi

        fi
    done < "$runResultsFile"
done

writeRiskPercent=$((totalWriteRisk*100/totalWrite))
rmRiskPercent=$((totalRmdirRisk*100/totalRmdir))
forgetRiskPercent=$((totalForgetRisk*100/totalForget))
totalRiskPercent=$((totalRisk*100/totalActions))

writeRiskPercent_f=$((totalWriteRisk_f*100/totalWrite_f))
rmRiskPercent_f=$((totalRmdirRisk_f*100/totalRmdir_f))
forgetRiskPercent_f=$((totalForgetRisk_f*100/totalForget_f))
totalRiskPercent_f=$((totalRisk_f*100/totalActions_f))

sudo touch $summaryFile
sudo chmod 777 $summaryFile
echo -en "|----------------------------------------\n| Run configurations:\n" > $summaryFile
echo -en "$config\n" >> $summaryFile
printf "|--------------------------------------------------------------\n| Demo Summary\n|--------------------------------------------------------------\n| Ransom program tested  |      'Real'      |    'False'\n|--------------------------------------------------------------\n| Action name            |            Total count\n|--------------------------------------------------------------\n| Write                  | %5d           | %5d  \n| Rmdir                  | %5d           | %5d  \n| Forget                 | %5d           | %5d \n| Total                  | %5d           | %5d\n|--------------------------------------------------------------\n| Heuristic name         |           Max threshold\n|--------------------------------------------------------------\n| File type changes      | %5d           | %5d\n| Similarity Measurement | %5d           | %5d\n| Shannon Enthropy       | %5d           | %5d\n| Files Deletion         | %5d           | %5d\n| Suspicious Keywords    | %5d           | %5d\n|--------------------------------------------------------------\n| Resolutions\n|--------------------------------------------------------------\n| Action name            |            Total Risk\n|--------------------------------------------------------------\n| Write                  | %5d (%5.2f%%)  | %5d (%5.2f%%)\n| Rmdir                  | %5d (%5.2f%%)  | %5d (%5.2f%%)\n| Forget                 | %5d (%5.2f%%)  | %5d (%5.2f%%)\n| Total                  | %5d (%5.2f%%)  | %5d (%5.2f%%)\n|--------------------------------------------------------------\n" $totalWrite $totalWrite_f $totalRmdir $totalRmdir_f $totalForget $totalForget_f $totalActions $totalActions_f $maxFTCthreshold $maxFTCthreshold_f $maxSMthreshold $maxSMthreshold_f $maxSEthreshold $maxSEthreshold_f $maxFDthreshold $maxFDthreshold_f $maxSKthreshold $maxSKthreshold_f $totalWriteRisk $writeRiskPercent $totalWriteRisk_f $writeRiskPercent_f $totalRmdirRisk $rmRiskPercent $totalRmdirRisk_f $rmRiskPercent_f $totalForgetRisk $forgetRiskPercent $totalForgetRisk_f $forgetRiskPercent_f $totalRisk $totalRiskPercent $totalRisk_f $totalRiskPercent_f >> $summaryFile
